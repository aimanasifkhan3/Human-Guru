const express = require('express');
const app = express(),
      mongoose              = require("mongoose"),
      passport              = require("passport"),
      bodyParser            = require("body-parser"),
      User                  = require("./models/users.js"),
      LocalStrategy         = require("passport-local"),
      passportLocalMongoose = require("passport-local-mongoose"),
      Article = require('./models/article'),
      articleRouter = require('./routes/articles'),
      methodOverride = require('method-override')

app.set('view engine', 'ejs')
app.use(express.static("public"));

mongoose.connect('mongodb://localhost/blog', {
  useNewUrlParser: true, useUnifiedTopology: true
})

app.use(bodyParser.urlencoded({extended: true})); 
app.use(require("express-session")({
    secret: "type anything here",
    resave: false,
    saveUninitialized: false
}));
app.use(passport.initialize());
app.use(passport.session());

passport.use(new LocalStrategy(User.authenticate()));
passport.serializeUser(User.serializeUser());
passport.deserializeUser(User.deserializeUser());

app.use(express.urlencoded({ extended: false }))
app.use(methodOverride('_method'))


app.use('/articles', articleRouter)


app.get('/' ,(req,res) =>
{
    res.render('home.ejs');
});

app.get('/new' ,isLoggedIn, (req,res) =>
{
    res.render('new.ejs' , { article: new Article() });
});

app.get("/register",function(req,res)
	{
		res.render("register");
	});

//Signing Up Code

app.post("/register",function(req,res)
	{	if(req.body.domain == "admin.com")
	{
		newUser.isAdmin = true;
	}
		req.body.pname
		req.body.password
		User.register(new User({username: req.body.username}), req.body.password, function(err,user)
			{
				if(err)
				{
					console.log(err);
					return res.render("register");
				}
				   passport.authenticate("local")(req,res,function()
				{
 					res.redirect("/");
				});
			});
	});

//Login Routes
app.get("/login",function(req,res)
	{
		res.render("login");
	});
app.post("/login", passport.authenticate("local" ,{
		successRedirect: "/new",
		failureRedirect: "/login"
}),function(req,res)
	{

	});
app.get("/logout",function(req,res, next)
{
    req.logout(function(err) {
        if (err) { return next(err); }
        res.redirect('/login');
      });
	});
function isLoggedIn(req,res,next)
{
	if(req.isAuthenticated())
	{
		return next();
	}
	res.redirect("/login");
}
app.get("*",function(req,res)
	{
		res.render("error.ejs");
	});

console.log("server has started");
app.listen(5000);